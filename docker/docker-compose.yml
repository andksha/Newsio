version: '3.2'

networks:
  newsio:
    driver: bridge

services:

  newsio_nginx:
    container_name: newsio_nginx
    working_dir: /application
    build:
      context: ../
      dockerfile: docker/nginx/Dockerfile
    volumes:
      - ../:/application
      - ../docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${NGINX_PORT}:80
    depends_on:
      - newsio_phpfpm
    networks:
      - newsio

  newsio_phpfpm:
    container_name: newsio_phpfpm
    build:
      context: ../
      dockerfile: docker/php_fpm/Dockerfile
    working_dir: /application
    restart: unless-stopped
    volumes:
      - ../:/application
      - ../docker/php_fpm/php-ini-overrides.ini:/etc/php/7.4/fpm/conf.d/99-overrides.ini
    depends_on:
      - newsio_pgsql
    networks:
      - newsio

  newsio_pgsql:
    container_name: newsio_pgsql
    image: postgres:11.1-alpine
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data/
      - ./postgresql/init:/usr/local/bin/init
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - newsio

#  newsio_pgsql_write:
#    container_name: newsio_pgsql_write
#    image: postgres:11.1-alpine
#    environment:
#      - POSTGRES_USER=${DB_USERNAME}
#      - POSTGRES_PASSWORD=${DB_PASSWORD}
#      - POSTGRES_DB=${DB_DATABASE}
#    volumes:
#      - ../docker/postgresql/postgresql_write.conf:/var/lib/postgresql/data/postgresql.conf
#    ports:
#      - ${POSTGRES_WRITE_PORT}:5433
#    networks:
#      - newsio

#  newsio_pgsql_read:
#    container_name: newsio_pgsql_read
#    image: postgres:11.1-alpine
#    environment:
#      - POSTGRES_USER=${DB_USERNAME}
#      - POSTGRES_PASSWORD=${DB_PASSWORD}
#      - POSTGRES_DB=${DB_DATABASE}
#    volumes:
#      - ../docker/postgresql/postgresql_read.conf:/var/lib/postgresql/data/postgresql.conf
#    ports:
#      - ${POSTGRES_READ_PORT}:5434
#    networks:
#      - newsio

  newsio_redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    container_name: newsio_redis
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - newsio

#  newsio_cron:
#    container_name: newsio_cron
#    build:
#      context: ../
#      dockerfile: docker/php_cron/Dockerfile
#    working_dir: /application
#    restart: unless-stopped
#    volumes:
#      - ../:/application
#    networks:
#      - newsio
#
#  newsio_queue:
#    container_name: newsio_queue
#    build:
#      context: ../
#      dockerfile: docker/php_cli/Dockerfile
#    working_dir: /application
#    restart: unless-stopped
#    volumes:
#      - ../:/application
#      - ../docker/php_cli/laravel-worker.conf:/etc/supervisor/conf.d/laravel-worker.conf
#    command: ["php", "artisan", "queue:work"]
#    networks:
#      - newsio

#  mysql_newsio:
#    container_name: mysql_newsio
#    image: mysql:8.0.17
#    command: --default-authentication-plugin=mysql_native_password
##    volumes:
##      - mysql-data:/var/lib/mysql
#    ports:
#      - ${MYSQL_PORT}:3306
#    environment:
#      MYSQL_ROOT_HOST: "%"
#      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
#      MYSQL_ROOT_PASSWORD: "qwerty"
#      MYSQL_PASSWORD: 'qwerty'
#      MYSQL_DATABASE: 'database'
#      MYSQL_USER: 'user'
#    networks:
#      - newsio